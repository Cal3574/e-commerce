// This is your Prisma schema file

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  name     String?
  orders   Order[]
  cart     ShoppingCart?  
  }

model Product {
  id       Int      @id @default(autoincrement())
  name     String
  price    Float
  quantity Int
  description String
  image    String
  category category  @default(OTHER)
  orderItems OrderItem[] // Relationship to fetch order items
  cartItems CartItems[] // Relationship to fetch cart items
}

model Order {
  id        Int        @id @default(autoincrement())
  userId    Int
  total     Float
  status    orderStatus @default(PENDING)
  createdAt DateTime   @default(now())
  user      User       @relation(fields: [userId], references: [id])
  orderItems OrderItem[]  // Relationship to fetch order items
}


model OrderItem {
  id        Int      @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int      // Quantity of the product in the order
  order     Order    @relation(fields: [orderId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}

model ShoppingCart {
  cartId    Int      @id @default(autoincrement())
  userId    Int      @unique
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
  cartItems CartItems[]
  user User @relation(fields: [userId], references: [id])

}

model CartItems {
  cartItemId Int      @id @default(autoincrement())
  cartId     Int
  productId  Int
  quantity   Int      // Quantity of the product in the cart
  product    Product  @relation(fields: [productId], references: [id])
  cart       ShoppingCart @relation(fields: [cartId], references: [cartId])
}


enum orderStatus {
  PENDING
  COMPLETED
  CANCELLED
}

enum category {
  PHONE
  HEALTH
  COMPUTERS
  WATCHES
  HEADPHONES
  BOOKS
  OTHER
}